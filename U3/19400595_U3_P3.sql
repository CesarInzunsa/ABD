--PRACTICA 3
--AUTOR: INZUNSA DIAZ CESAR ALEJANDRO
--NO. CONTROL: 19400595
--FECHA: 14/03/22
--DESCRIPCION: Esta practica tiene como objetivo el recordar como crear roles, usuarios, inicios de sesion.
--Pero tambien aprender como crear y asignar esquemas a un usuario.

--CREAR BD
CREATE DATABASE DESARROLLO_DE_PERSONAL
ON PRIMARY
(
	NAME = 'DESARROLLO_DE_PERSONAL',
	FILENAME = 'C:\ABD2022\U3\DESARROLLO_DE_PERSONAL.MDF' 
)
LOG ON
(
NAME = 'DESARROLLO_DE_PERSONAL.LDF',
FILENAME ='C:\ABD2022\U3\DESARROLLO_DE_PERSONAL.LDF'
)

--PONER EN USO LA BD
USE DESARROLLO_DE_PERSONAL;

--CREAR ROLES
CREATE ROLE Rol1;
CREATE ROLE Rol2;
CREATE ROLE Rol3;

--DAR PERMISOS A AL ROLE1
EXECUTE sp_addrolemember db_backupoperator, Rol1;
EXECUTE sp_addrolemember db_ddladmin, Rol1;
EXECUTE sp_addrolemember db_datareader, Rol1;
EXECUTE sp_addrolemember db_accessadmin, Rol1;
EXECUTE sp_addrolemember db_securityadmin, Rol1;

--DAR PERMISOS A AL ROLE2
EXECUTE sp_addrolemember db_datareader, Rol2;
EXECUTE sp_addrolemember db_datawriter, Rol2;

--DAR PERMISOS A AL ROLE3
EXECUTE sp_addrolemember db_datareader, Rol3;

--3. CREAR UN USUARIO QUE  LO AGREGUE AL ROL1
CREATE LOGIN loginU1 WITH PASSWORD = '12345';
CREATE USER usuario1 FOR LOGIN loginU1;
EXECUTE sp_addrolemember Rol1, usuario1;
EXECUTE sp_addsrvrolemember loginU1, securityadmin;


-----------INICIO USUARIO 1
----4. CONECTATE CON EL USUARIO QUE PERTENECE AL ROL 1 Y AGREGA LO SIGUIENTE:
--CREAR UN USUARIO Y LO AGREGAS AL ROL 2
--CREAR UN USUARIO Y LO AGREGAS AL ROL 3

USE DESARROLLO_DE_PERSONAL;

CREATE LOGIN loginU2 WITH PASSWORD = '12345';
CREATE USER usuario2 FOR LOGIN loginU2;
EXECUTE sp_addrolemember Rol2, usuario2;

CREATE LOGIN loginU3 WITH PASSWORD = '12345';
CREATE USER usuario3 FOR LOGIN loginU3;
EXECUTE sp_addrolemember Rol3, usuario3;

-----------FIN USUARIO 1

----5. CONECTATE CON LOS USUARIIOS PERTINENTES PARA REALIZAR CADA ACTIVIDAD
--CREA LOS ESQUEMAS Y TABLAS NECESARIAS PARA LA BD. (usuario1 -> esquemas, tablas -> dbo )
--ESQUEMAS (CATALOGOS, PARTICIPANTES, IMPARTIDOS)

-----------INICIO USUARIO USUARIO1
CREATE SCHEMA CATALOGOS;
CREATE SCHEMA PARTICIPANTES;
CREATE SCHEMA IMPARTIDOS;
-----------FIN USUARIO USUARIO1

-----------INICIO USUARIO DBO
--CREAR TABLAS DE CURSOS: TALLER, DIPLOMADOS, INSTRUCTORES, CURSOSABIERTOS, LISTAS, TRABAJADOR, MANUALS
CREATE TABLE CATALOGOS.CURSOS
(
	CUR_ID INT IDENTITY(1,1) PRIMARY KEY,
	CUR_NOMBRE VARCHAR(50),
	CUR_DESCRIPTICION VARCHAR(300),
	INT_ID INT
);
CREATE TABLE CATALOGOS.TALLER
(
TAR_ID INT IDENTITY(1,1) PRIMARY KEY,
TAR_NOMBRE VARCHAR(50),
TAR_DESCRIPTICION VARCHAR(300),
INT_ID INT
);
CREATE TABLE CATALOGOS.DIPLOMADOS
(
DIP_ID INT IDENTITY(1,1) PRIMARY KEY,
DIP_NOMBRE VARCHAR(50),
DIP_DESCRIPTICION VARCHAR(300),
INT_ID INT
);
CREATE TABLE IMPARTIDOS.INSTRUCTORES
(
INT_ID INT IDENTITY(1,1) PRIMARY KEY,
INT_NOMBRE VARCHAR(50),
INT_PROFESION VARCHAR(30),
);
CREATE TABLE IMPARTIDOS.CURSOSABIERTOS
(
IMP_ID INT PRIMARY KEY,
ID_CUDIPTA VARCHAR(50), --FK PARA CUALQUIER TIPO CURSO, TALLER , DIPLOMADO
IMP_FECHAINI DATE,
IMP_FECHAFIN DATE,
);
CREATE TABLE PARTICIPANTES.LISTAS
(
LIS_ID INT PRIMARY KEY,
IMP_ID INT,
ID_TRAB INT,
LIS_ESTATUS CHAR(1)
);
CREATE TABLE PARTICIPANTES.TRABAJADOR
(
ID_TRAB INT PRIMARY KEY,
NOMBRE_TRAB VARCHAR(100),
DEPTO_TRAB VARCHAR(60)
);
CREATE TABLE MANUALES
(
MANUAL_ID INT IDENTITY(1,1) PRIMARY KEY,
ID_CUDIPTA VARCHAR(50), --FK PARA CUALQUIER TIPO CURSO, TALLER , DIPLOMADO
MANUAL_URL VARCHAR(150)
);
-----------FIN USUARIO DBO

-----------INICIO USUARIO1
--CREA FK DE LAS TABLAS PARA QUE QUEDE LA BD CON EL DIAGRAMA QUE SE ANEXA(usuario1)
USE DESARROLLO_DE_PERSONAL;

ALTER TABLE CATALOGOS.CURSOS
ADD CONSTRAINT CURSOS_CON_INSTRUCTORES
FOREIGN KEY (INT_ID)
REFERENCES IMPARTIDOS.INSTRUCTORES(INT_ID);

ALTER TABLE CATALOGOS.TALLER
ADD CONSTRAINT CURSOS_CON_TALLER
FOREIGN KEY (INT_ID)
REFERENCES IMPARTIDOS.INSTRUCTORES(INT_ID);

ALTER TABLE CATALOGOS.DIPLOMADOS
ADD CONSTRAINT CURSOS_CON_DIPLOMADOS
FOREIGN KEY (INT_ID)
REFERENCES IMPARTIDOS.INSTRUCTORES(INT_ID);

ALTER TABLE PARTICIPANTES.LISTAS
ADD CONSTRAINT LISTAS_CON_TRABAJADOR
FOREIGN KEY (ID_TRAB)
REFERENCES PARTICIPANTES.TRABAJADOR(ID_TRAB);

ALTER TABLE PARTICIPANTES.LISTAS
ADD CONSTRAINT LISTAS_CON_CURSOS_ABIERTOS
FOREIGN KEY (IMP_ID)
REFERENCES IMPARTIDOS.CURSOSABIERTOS(IMP_ID);
-----------INICIO USUARIO1


--CAMBIA LA TABLA MANUALES AL ESQUEMA QUE LE CORRESPONDE (usuario1)ALTER AUTHORIZATION ON OBJECT::dbo.MANUALES TO usuario1; --PARA HACER ESTE PUNTO HAY QUE DARLE LA AUTORIZACION AL USUARIO1ALTER SCHEMA CATALOGOS TRANSFER dbo.MANUALES;  

--PONGALES DIFERENTES ESQUEMAS POR DEFAULT A CADA USUARIO (usuario1).
USE DESARROLLO_DE_PERSONAL;

ALTER USER usuario1 WITH DEFAULT_SCHEMA = CATALOGOS;
ALTER USER usuario2 WITH DEFAULT_SCHEMA = IMPARTIDOS;
ALTER USER usuario3 WITH DEFAULT_SCHEMA = PARTICIPANTES;

--INSERTE, MODIQUE Y BORRE AL MENOS DOS REGISTROS EN DISTINTAS TABLAS (usuario2).
INSERT INTO INSTRUCTORES VALUES 
('VERONICA RAMIREZ JAUREGUI','DOCENTE')
GO 5
INSERT INTO CATALOGOS.CURSOS VALUES
('ADMINISTRACION BD','CURSO AVANZADO DE BD RELACIONALES',1)
GO 3

UPDATE INSTRUCTORES SET INT_NOMBRE = 'CESAR INZUNSA', INT_PROFESION = 'ING. EN SISTEMAS' WHERE INSTRUCTORES.INT_ID = 2;
UPDATE CATALOGOS.CURSOS SET CUR_NOMBRE = 'REDES', INT_ID = 2 WHERE CATALOGOS.CURSOS.CUR_ID = 2;

DELETE FROM INSTRUCTORES WHERE INT_ID = 3;
DELETE FROM CATALOGOS.CURSOS WHERE CUR_ID >= 3;

--CONSULTA LOS REGISTROS DE CADA TABLA (usuario3)
SELECT * FROM CATALOGOS.CURSOS;
SELECT * FROM CATALOGOS.DIPLOMADOS;
SELECT * FROM CATALOGOS.MANUALES;
SELECT * FROM CATALOGOS.TALLER;
SELECT * FROM IMPARTIDOS.CURSOSABIERTOS;
SELECT * FROM IMPARTIDOS.INSTRUCTORES;
SELECT * FROM PARTICIPANTES.LISTAS;
SELECT * FROM PARTICIPANTES.TRABAJADOR;

--CONSULTA CUANTOS USUARIOS HAY EN CADA ROL (dbo /usuario1)
SELECT DP1.NAME AS DatabaseRoleName,
isnull (DP2.name, 'No members') AS DatabaseUserName
FROM sys.database_role_members AS DRM
RIGHT OUTER JOIN sys.database_principals AS DP1
ON DRM.role_principal_id = DP1.principal_id
LEFT OUTER JOIN sys.database_principals AS DP2 ON
DRM.member_principal_id = DP2.principal_id WHERE DP1.type = 'R'
ORDER BY DP1.name;