--PRACTICA 10
--AUTOR: INZUNSA DIAZ CESAR ALEJANDRO
--NO. CONTROL: 19400595
--FECHA: 30/03/22
--DESCRIPCION: Practicar la creacion de particiones horizontales


--CREACION DE LA BD
CREATE DATABASE Almacen
ON PRIMARY
(
	NAME = 'Almacen.MDF',
	FILENAME = 'C:\ABD2022\U3\Almacen.MDF'
)
LOG ON
(
	NAME = 'Almacen.LDF',
	FILENAME = 'C:\ABD2022\U3\Almacen.LDF'
);

--PONER EN USO LA BD
USE Almacen;

--CREAR TABLAS
CREATE TABLE CAJEROS
(
	ID_CAJERO INT IDENTITY (1,1) PRIMARY KEY,
	NOMBRE VARCHAR(30),
	EDAD SMALLINT,
	TELEFONO VARCHAR(15),
	DIRECCION VARCHAR(50),
	FECHA_NACIMIENTO DATE
);

CREATE TABLE VENTAS
(
	ID_VTAS INT IDENTITY (1,1) PRIMARY KEY,
	FECHA_VTA DATE,
	id_cajero INT REFERENCES CAJEROS(ID_CAJERO),
	importe_vta MONEY,
	TOT_PROD MONEY,
	IMP_DESCUENTOS MONEY,
	IMP_IVA MONEY
);

CREATE TABLE INVENTARIO
(
	ID_INV INT IDENTITY (1,1) PRIMARY KEY,
	id_prod INT,
	nombre_prod VARCHAR(100),
	precio_vta MONEY,
	precio_cto MONEY,
	cantidad_existencia SMALLINT
);

CREATE TABLE [DETALLE VENTA]
(
	ID_DETVTA INT IDENTITY (1,1) PRIMARY KEY,
	ID_VENTA INT REFERENCES VENTAS(ID_VTAS),
	ID_INV INT REFERENCES INVENTARIO(ID_INV),
	ID_CAJERO INT,
	NOMBRE_PROD VARCHAR(100),
	CANTIDAD_PROD SMALLINT,
	TOTAL_VENTA MONEY,
	IMP_DESCUENTO MONEY
);

CREATE TABLE [ENTRADAS SALIDAS]
(
	ID_ENT_SAL INT IDENTITY (1,1) PRIMARY KEY,
	ID_INV INT REFERENCES INVENTARIO(ID_INV),
	CANTIDAD SMALLINT,
	TIPO VARCHAR(50),
	FECHA_MOV DATE,
	OBSERVACION VARCHAR(200)
);

INSERT INTO CAJEROS VALUES
('Cesar Inzunsa', 21, '3115829478', 'Calle Falsa #26', '2000/11/03');

--LLENAR LA TABLA DE REPORTES
DECLARE @i int
DECLARE @FECHA_VENTA DATE
DECLARE @id_cajero INT
DECLARE @importe_vta MONEY
DECLARE @TOT_PROD MONEY
DECLARE @IMP_DESCUENTOS MONEY
DECLARE @IMP_IVA MONEY
SET @i = 1

BEGIN TRAN
WHILE @i<=150000
BEGIN 
  IF @i between 1 and 10000
     SET @FECHA_VENTA = '2020/01/15'
	 SET @id_cajero = 1
     SET @importe_vta = RAND()*3333
	 SET @IMP_DESCUENTOS = RAND()*100
	 SET @IMP_IVA = RAND()*15
     SET @TOT_PROD = (@importe_vta - @IMP_DESCUENTOS) + @IMP_IVA   
  IF @i between 10001 and 20000
     SET @FECHA_VENTA = '2020/02/15'
	 SET @id_cajero = 1
     SET @importe_vta = RAND()*3333
	 SET @IMP_DESCUENTOS = RAND()*100
	 SET @IMP_IVA = RAND()*15
     SET @TOT_PROD = (@importe_vta - @IMP_DESCUENTOS) + @IMP_IVA   
  IF @i between 20001 and 30000
     SET @FECHA_VENTA = '2020/03/15'
	 SET @id_cajero = 1
     SET @importe_vta = RAND()*3333
	 SET @IMP_DESCUENTOS = RAND()*100
	 SET @IMP_IVA = RAND()*15
     SET @TOT_PROD = (@importe_vta - @IMP_DESCUENTOS) + @IMP_IVA   
  IF @i between 30001 and 40000
     SET @FECHA_VENTA = '2020/04/15'
	 SET @id_cajero = 1
     SET @importe_vta = RAND()*3333
	 SET @IMP_DESCUENTOS = RAND()*100
	 SET @IMP_IVA = RAND()*15
     SET @TOT_PROD = (@importe_vta - @IMP_DESCUENTOS) + @IMP_IVA   
  IF @i between 40001 and 50000
     SET @FECHA_VENTA = '2020/05/15'
	 SET @id_cajero = 1
     SET @importe_vta = RAND()*3333
	 SET @IMP_DESCUENTOS = RAND()*100
	 SET @IMP_IVA = RAND()*15
     SET @TOT_PROD = (@importe_vta - @IMP_DESCUENTOS) + @IMP_IVA   
  IF @i between 50001 and 60000
     SET @FECHA_VENTA = '2020/06/15'
	 SET @id_cajero = 1
     SET @importe_vta = RAND()*3333
	 SET @IMP_DESCUENTOS = RAND()*100
	 SET @IMP_IVA = RAND()*15
     SET @TOT_PROD = (@importe_vta - @IMP_DESCUENTOS) + @IMP_IVA   
  IF @i between 60001 and 70000
     SET @FECHA_VENTA = '2020/07/15'
	 SET @id_cajero = 1
     SET @importe_vta = RAND()*3333
	 SET @IMP_DESCUENTOS = RAND()*100
	 SET @IMP_IVA = RAND()*15
     SET @TOT_PROD = (@importe_vta - @IMP_DESCUENTOS) + @IMP_IVA   
  IF @i between 70001 and 80000
     SET @FECHA_VENTA = '2020/08/15'
	 SET @id_cajero = 1
     SET @importe_vta = RAND()*3333
	 SET @IMP_DESCUENTOS = RAND()*100
	 SET @IMP_IVA = RAND()*15
     SET @TOT_PROD = (@importe_vta - @IMP_DESCUENTOS) + @IMP_IVA   
  IF @i between 80001 and 90000
     SET @FECHA_VENTA = '2020/09/15'
	 SET @id_cajero = 1
     SET @importe_vta = RAND()*3333
	 SET @IMP_DESCUENTOS = RAND()*100
	 SET @IMP_IVA = RAND()*15
     SET @TOT_PROD = (@importe_vta - @IMP_DESCUENTOS) + @IMP_IVA   
  IF @i between 90001 and 100000
     SET @FECHA_VENTA = '2020/10/15'
	 SET @id_cajero = 1
     SET @importe_vta = RAND()*3333
	 SET @IMP_DESCUENTOS = RAND()*100
	 SET @IMP_IVA = RAND()*15
     SET @TOT_PROD = (@importe_vta - @IMP_DESCUENTOS) + @IMP_IVA   
  IF @i between 100001 and 110000
     SET @FECHA_VENTA = '2020/11/15'
	 SET @id_cajero = 1
     SET @importe_vta = RAND()*3333
	 SET @IMP_DESCUENTOS = RAND()*100
	 SET @IMP_IVA = RAND()*15
     SET @TOT_PROD = (@importe_vta - @IMP_DESCUENTOS) + @IMP_IVA   
  IF @i between 110001 and 120000
     SET @FECHA_VENTA = '2020/12/15'
	 SET @id_cajero = 1
     SET @importe_vta = RAND()*3333
	 SET @IMP_DESCUENTOS = RAND()*100
	 SET @IMP_IVA = RAND()*15
     SET @TOT_PROD = (@importe_vta - @IMP_DESCUENTOS) + @IMP_IVA   
  IF @i between 120001 and 130000
     SET @FECHA_VENTA = '2021/01/15'
	 SET @id_cajero = 1
     SET @importe_vta = RAND()*3333
	 SET @IMP_DESCUENTOS = RAND()*100
	 SET @IMP_IVA = RAND()*15
     SET @TOT_PROD = (@importe_vta - @IMP_DESCUENTOS) + @IMP_IVA   
  IF @i between 130001 and 140000
     SET @FECHA_VENTA = '2021/02/15'
	 SET @id_cajero = 1
     SET @importe_vta = RAND()*3333
	 SET @IMP_DESCUENTOS = RAND()*100
	 SET @IMP_IVA = RAND()*15
     SET @TOT_PROD = (@importe_vta - @IMP_DESCUENTOS) + @IMP_IVA   
  IF @i between 140001 and 150000
     SET @FECHA_VENTA = '2021/03/15'
	 SET @id_cajero = 1
     SET @importe_vta = RAND()*3333
	 SET @IMP_DESCUENTOS = RAND()*100
	 SET @IMP_IVA = RAND()*15
     SET @TOT_PROD = (@importe_vta - @IMP_DESCUENTOS) + @IMP_IVA   

  INSERT INTO VENTAS
  (
   FECHA_VTA,
	id_cajero,
	importe_vta,
	TOT_PROD,
	IMP_DESCUENTOS,
	IMP_IVA
  )
  VALUES
  (
   @FECHA_VENTA,
   @id_cajero,
   @importe_vta,
   @TOT_PROD,
   @IMP_DESCUENTOS,
   @IMP_IVA
  )
  SET @i=@i+1
 END
COMMIT TRAN
GO

--CONTAR LOS REGISTROS EN LA TABLA DE REPORTES: HAY 150,000.
SELECT COUNT(*) FROM VENTAS;

--PASO 1: CREAR LOS FILEGROUP
ALTER DATABASE ALMACEN ADD FILEGROUP HistoEnero2020;

ALTER DATABASE ALMACEN ADD FILEGROUP HistoFebrero2020;

ALTER DATABASE ALMACEN ADD FILEGROUP HistoMarzo2020;

ALTER DATABASE ALMACEN ADD FILEGROUP HistoAbril2020;

ALTER DATABASE ALMACEN ADD FILEGROUP HistoMayo2020;

ALTER DATABASE ALMACEN ADD FILEGROUP HistoJunio2020;

ALTER DATABASE ALMACEN ADD FILEGROUP HistoJulio2020;

ALTER DATABASE ALMACEN ADD FILEGROUP HistoAgosto2020;

ALTER DATABASE ALMACEN ADD FILEGROUP HistoSeptiembre2020;

ALTER DATABASE ALMACEN ADD FILEGROUP HistoOctubre2020;

ALTER DATABASE ALMACEN ADD FILEGROUP HistoNoviembre2020;

ALTER DATABASE ALMACEN ADD FILEGROUP HistoDiciembre2020;

ALTER DATABASE ALMACEN ADD FILEGROUP Histo2021;

--PASO 2: CREAR LOS ARCHIVOS NDF
ALTER DATABASE ALMACEN
ADD FILE(
	NAME = 'ParticionEnero2020.NDF',
	FILENAME ='C:\ABD2022\U3\Disco1\ParticionEnero2020.NDF'
)
TO FILEGROUP HistoEnero2020;

ALTER DATABASE ALMACEN
ADD FILE(
	NAME = 'ParticionFebrero2020.NDF',
	FILENAME ='C:\ABD2022\U3\Disco2\ParticionFebrero2020.NDF'
)
TO FILEGROUP HistoFebrero2020

ALTER DATABASE ALMACEN
ADD FILE(
	NAME = 'ParticionMarzo2020.NDF',
	FILENAME ='C:\ABD2022\U3\Disco3\ParticionMarzo2020.NDF'
)
TO FILEGROUP HistoMarzo2020 

ALTER DATABASE ALMACEN
ADD FILE(
	NAME = 'ParticionAbril2020.NDF',
	FILENAME ='C:\ABD2022\U3\Disco4\ParticionAbril2020.NDF'
)
TO FILEGROUP HistoAbril2020

ALTER DATABASE ALMACEN
ADD FILE(
	NAME = 'ParticionMayo2020.NDF',
	FILENAME ='C:\ABD2022\U3\Disco5\ParticionMayo2020.NDF'
)
TO FILEGROUP HistoMayo2020

ALTER DATABASE ALMACEN
ADD FILE(
	NAME = 'ParticionJunio2020.NDF',
	FILENAME ='C:\ABD2022\U3\Disco6\ParticionJunio2020.NDF'
)
TO FILEGROUP HistoJunio2020

ALTER DATABASE ALMACEN
ADD FILE(
	NAME = 'ParticionJulio2020.NDF',
	FILENAME ='C:\ABD2022\U3\Disco7\ParticionJulio2020.NDF'
)
TO FILEGROUP HistoJulio2020

ALTER DATABASE ALMACEN
ADD FILE(
	NAME = 'ParticionAgosto2020.NDF',
	FILENAME ='C:\ABD2022\U3\Disco8\ParticionAgosto2020.NDF'
)
TO FILEGROUP HistoAgosto2020

ALTER DATABASE ALMACEN
ADD FILE(
	NAME = 'ParticionSeptiembre2020.NDF',
	FILENAME ='C:\ABD2022\U3\Disco9\ParticionSeptiembre2020.NDF'
)
TO FILEGROUP HistoSeptiembre2020

ALTER DATABASE ALMACEN
ADD FILE(
	NAME = 'ParticionOctubre2020.NDF',
	FILENAME ='C:\ABD2022\U3\Disco10\ParticionOctubre2020.NDF'
)
TO FILEGROUP HistoOctubre2020

ALTER DATABASE ALMACEN
ADD FILE(
	NAME = 'ParticionNoviembre2020.NDF',
	FILENAME ='C:\ABD2022\U3\Disco11\ParticionNoviembre2020.NDF'
)
TO FILEGROUP HistoNoviembre2020

ALTER DATABASE ALMACEN
ADD FILE(
	NAME = 'ParticionDiciembre2020.NDF',
	FILENAME ='C:\ABD2022\U3\Disco12\ParticionDiciembre2020.NDF'
)
TO FILEGROUP HistoDiciembre2020

ALTER DATABASE ALMACEN
ADD FILE(
	NAME = 'Particion2021.NDF',
	FILENAME ='C:\ABD2022\U3\Disco13\Particion2021.NDF'
)
TO FILEGROUP Histo2021

--PASO 3: CREAR LA FUNCION DE PARTICION
CREATE PARTITION FUNCTION F_PartitionByMes(DATE)
AS RANGE RIGHT FOR VALUES
(
'2020-02-01',
'2020-03-01',
'2020-04-01', 
'2020-05-01', 
'2020-06-01', 
'2020-07-01',
'2020-08-01', 
'2020-09-01', 
'2020-10-01', 
'2020-11-01', 
'2020-12-01', 
'2021-01-01'
);

--PASO 4: CREAR EL ESQUEMA DE PARTICION
CREATE PARTITION SCHEME EsquemaByMes
As PARTITION F_PartitionByMes
TO (
HistoEnero2020, 
HistoFebrero2020, 
HistoMarzo2020, 
HistoAbril2020, 
HistoMayo2020,
HistoJunio2020,
HistoJulio2020,
HistoAgosto2020,
HistoSeptiembre2020,
HistoOctubre2020,
HistoNoviembre2020,
HistoDiciembre2020,
Histo2021
);

--PASO 5: CREAR TABLA DE VENTAS 2
CREATE TABLE VENTAS_Particionada(
	ID_VTAS INT PRIMARY KEY NONCLUSTERED,
	FECHA_VTA DATE,
	id_cajero INT REFERENCES CAJEROS(ID_CAJERO),
	importe_vta MONEY,
	TOT_PROD MONEY,
	IMP_DESCUENTOS MONEY,
	IMP_IVA MONEY
);

--CREAR INDEX CLUSTERED
CREATE CLUSTERED INDEX IDX_VentPart
ON VENTAS_Particionada (FECHA_VTA)
ON EsquemaByMes (FECHA_VTA);

--OBSERVAR EL TIEMPO QUE TARDA EN REALIZAR UNA CONSULTA: 0.4 SEGUNDOS
SELECT * FROM VENTAS WHERE YEAR(FECHA_VTA) = '2020';

--VACIAR REGISTROS EN LA TABLA NUEVA Y VERIFICAR
INSERT INTO VENTAS_Particionada SELECT * FROM VENTAS;
SELECT COUNT(*) FROM VENTAS_Particionada;

--OBSERVAR VELOCIDAD DE CONSULTA: 0.4 SEGUNDOS
SELECT * FROM VENTAS_Particionada WHERE YEAR(FECHA_VTA) = '2020';

--BORRAR TABLA DE REPORTES (ANTIGUA)
ALTER TABLE [DETALLE VENTA]
DROP CONSTRAINT [FK__DETALLE V__ID_VE__2B3F6F97];
DROP TABLE VENTAS;

--CAMBIAR EL NOMBRE A LA TABLA NUEVA
EXEC sp_rename 'VENTAS_Particionada', 'VENTAS';

--CREAR LLAVE FORANEA EN DETALLE VENTA
ALTER TABLE [DETALLE VENTA]
ADD CONSTRAINT FK_DetalleVenta_Con_Ventas FOREIGN KEY(ID_VENTA)
REFERENCES VENTAS(ID_VTAS);

--VERIFICAR LAS PARTICIONES
SELECT p.partition_number AS Num_Particion, f.name AS Nombre, p.rows AS Columnas
FROM sys.partitions p
JOIN sys.destination_data_spaces dds ON p.partition_number = dds.destination_id
JOIN sys.filegroups f ON dds.data_space_id = f.data_space_id
WHERE OBJECT_NAME(OBJECT_ID) = 'VENTAS'
AND p.index_id = 1;

--FileGroup
SELECT name AS NombresFilegroups
FROM sys.filegroups
WHERE TYPE = 'FG';

--DataFiles
SELECT
name AS [FileName], physical_name AS [FilePath] 
FROM sys.database_files
WHERE TYPE_DESC = 'ROWS';

--Registros de cada particion
SELECT * FROM VENTAS
WHERE $partition.F_PartitionByMes(FECHA_VTA) = 1;

SELECT * FROM VENTAS
WHERE $partition.F_PartitionByMes(FECHA_VTA) = 2;

SELECT * FROM VENTAS
WHERE $partition.F_PartitionByMes(FECHA_VTA) = 3;

SELECT * FROM VENTAS
WHERE $partition.F_PartitionByMes(FECHA_VTA) = 4;

SELECT * FROM VENTAS
WHERE $partition.F_PartitionByMes(FECHA_VTA) = 5;

SELECT * FROM VENTAS
WHERE $partition.F_PartitionByMes(FECHA_VTA) = 6;

SELECT * FROM VENTAS
WHERE $partition.F_PartitionByMes(FECHA_VTA) = 7;

SELECT * FROM VENTAS
WHERE $partition.F_PartitionByMes(FECHA_VTA) = 8;

SELECT * FROM VENTAS
WHERE $partition.F_PartitionByMes(FECHA_VTA) = 9;

SELECT * FROM VENTAS
WHERE $partition.F_PartitionByMes(FECHA_VTA) = 10;

SELECT * FROM VENTAS
WHERE $partition.F_PartitionByMes(FECHA_VTA) = 11;

SELECT * FROM VENTAS
WHERE $partition.F_PartitionByMes(FECHA_VTA) = 12;

SELECT * FROM VENTAS
WHERE $partition.F_PartitionByMes(FECHA_VTA) = 13;
