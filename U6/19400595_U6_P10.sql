--PRACTICA 10
--AUTOR: INZUNSA DIAZ CESAR ALEJANDRO
--NO. CONTROL: 19400595
--FECHA: 26/05/22
--DESCRIPCION: Practicar la creacion de bitacoras con triggers

--PONER EN USO LA BD
USE GUARDERIA;

--CREAR EL TRIGGER EN LA TABLA DE REGISTRO_ENT_SAL
CREATE TRIGGER TR_RregistroEntradaSalida ON REGISTRO_ENT_SAL FOR INSERT, UPDATE, DELETE AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @OPERACION VARCHAR(30), @REG_ID INT, @REG_HORA VARCHAR(5), @REG_FECHA DATE, @REG_TIPO CHAR(1), @ALU_ID INT, @FECHA_MOV DATE;
	DECLARE @HORA_MOV CHAR(8), @USUARIO VARCHAR(30), @APLICACION VARCHAR(50), @SERVIDOR VARCHAR(100);

	DECLARE @C_REGISTRO CURSOR;

	DECLARE @C_REGISTRO_ORIGINAL CURSOR;
	DECLARE @C_REGISTRO_ACTUALIZADO CURSOR;

	IF NOT EXISTS (SELECT * FROM BITACORAS.sys.OBJECTS WHERE TYPE = 'U' AND NAME = 'BITACORAS_ENTRADAS')
	BEGIN
		CREATE TABLE BITACORAS.DBO.BITACORAS_ENTRADAS(
			OPERACION VARCHAR(30),
			ID INT,
			HORA VARCHAR(5),
			FECHA DATETIME,
			ALUMNO INT,
			FECHA_MOV DATE,
			HORA_MOV TIME,
			USUARIO VARCHAR(30),
			APLICACION VARCHAR(50),
			SERVIDOR VARCHAR(100)
		);
	END--FIN IF BITACORAS_ENTRADAS

	IF NOT EXISTS (SELECT * FROM BITACORAS.sys.OBJECTS WHERE TYPE = 'U' AND NAME = 'BITACORAS_SALIDAS')
	BEGIN
		CREATE TABLE BITACORAS.DBO.BITACORAS_SALIDAS(
			OPERACION VARCHAR(30),
			ID INT,
			ALUMNO INT,
			FECHA_MOV DATE,
			HORA_MOV TIME,
			USUARIO VARCHAR(30),
			APLICACION VARCHAR(50),
			SERVIDOR VARCHAR(100)
		);
	END--FIN IF BITACORAS_SALIDAS

	DECLARE @CANTINSERT INT, @CANTDELETE INT;
	SET @CANTINSERT = (SELECT COUNT(*) FROM inserted);
	SET @CANTDELETE = (SELECT COUNT(*) FROM deleted);


	--INSERT
	IF (@CANTINSERT > 0 AND @CANTDELETE = 0)
	BEGIN
		SET @C_REGISTRO = CURSOR FOR SELECT REG_ID, REG_HORA, REG_FECHA, REG_TIPO, ALU_ID FROM inserted;
		SET @OPERACION = 'INSERT';

		--ABRIR CURSOR
		OPEN @C_REGISTRO;

		--POSICIONARNOS AL PRIMER REGISTRO
		FETCH FROM @C_REGISTRO INTO @REG_ID, @REG_HORA, @REG_FECHA, @REG_TIPO, @ALU_ID;

		WHILE (@@FETCH_STATUS = 0)
		BEGIN

			SET @HORA_MOV = (SELECT CONVERT(CHAR(8), GETDATE(), 108) AS [hh:mm:ss])
			SET @FECHA_MOV = GETDATE();
			SET @USUARIO = SUSER_NAME();
			SET @APLICACION = APP_NAME();
			SET @SERVIDOR = @@SERVERNAME;

			IF (@REG_TIPO = 'E')
			BEGIN
				INSERT INTO BITACORAS.DBO.BITACORAS_ENTRADAS VALUES
				(@OPERACION, @REG_ID, @REG_HORA, @REG_FECHA, @ALU_ID, @HORA_MOV, @HORA_MOV, @USUARIO, @APLICACION, @SERVIDOR);
			END

			IF (@REG_TIPO = 'S')
			BEGIN
				INSERT INTO BITACORAS.DBO.BITACORAS_SALIDAS VALUES
				(@OPERACION, @REG_ID, @ALU_ID, @HORA_MOV, @HORA_MOV, @USUARIO, @APLICACION, @SERVIDOR);
			END
		
			--MOVER AL SIGUIENTE REGISTRO
			FETCH NEXT FROM @C_REGISTRO INTO @REG_ID, @REG_HORA, @REG_FECHA, @REG_TIPO, @ALU_ID;
		END --FIN WHILE

		--CERRA EL CURSOR
		CLOSE @C_REGISTRO;
		--LIBERAR
		DEALLOCATE @C_REGISTRO;

	END--FIN IF INSERT

	--DELETE
	IF (@CANTINSERT = 0 AND @CANTDELETE > 0)
	BEGIN
		SET @C_REGISTRO = CURSOR FOR SELECT REG_ID, REG_HORA, REG_FECHA, REG_TIPO, ALU_ID FROM deleted;
		SET @OPERACION = 'DELETE';

		--ABRIR CURSOR
		OPEN @C_REGISTRO;

		--POSICIONARNOS AL PRIMER REGISTRO
		FETCH FROM @C_REGISTRO INTO @REG_ID, @REG_HORA, @REG_FECHA, @REG_TIPO, @ALU_ID;

		WHILE (@@FETCH_STATUS = 0)
		BEGIN

			SET @HORA_MOV = (SELECT CONVERT(CHAR(8), GETDATE(), 108) AS [hh:mm:ss])
			SET @FECHA_MOV = GETDATE();
			SET @USUARIO = SUSER_NAME();
			SET @APLICACION = APP_NAME();
			SET @SERVIDOR = @@SERVERNAME;

			IF (@REG_TIPO = 'E')
			BEGIN
				INSERT INTO BITACORAS.DBO.BITACORAS_ENTRADAS VALUES
				(@OPERACION, @REG_ID, @REG_HORA, @REG_FECHA, @ALU_ID, @HORA_MOV, @HORA_MOV, @USUARIO, @APLICACION, @SERVIDOR);
			END

			IF (@REG_TIPO = 'S')
			BEGIN
				INSERT INTO BITACORAS.DBO.BITACORAS_SALIDAS VALUES
				(@OPERACION, @REG_ID, @ALU_ID, @HORA_MOV, @HORA_MOV, @USUARIO, @APLICACION, @SERVIDOR);
			END
		
			--MOVER AL SIGUIENTE REGISTRO
			FETCH NEXT FROM @C_REGISTRO INTO @REG_ID, @REG_HORA, @REG_FECHA, @REG_TIPO, @ALU_ID;
		END --FIN WHILE

		--CERRA EL CURSOR
		CLOSE @C_REGISTRO;
		--LIBERAR
		DEALLOCATE @C_REGISTRO;

	END--FIN IF DELETE

	--UPDATE
	IF (@CANTINSERT > 0 AND @CANTDELETE > 0)
	BEGIN
		SET @C_REGISTRO = CURSOR FOR SELECT REG_ID, REG_HORA, REG_FECHA, REG_TIPO, ALU_ID FROM inserted;

		--ABRIR CURSOR
		OPEN @C_REGISTRO;

		--POSICIONARNOS AL PRIMER REGISTRO
		FETCH FROM @C_REGISTRO INTO @REG_ID, @REG_HORA, @REG_FECHA, @REG_TIPO, @ALU_ID;

		--PRIMERO GUARDAR EL REGISTRO ACTUALIZADO
		WHILE (@@FETCH_STATUS = 0)
		BEGIN

			SET @HORA_MOV = (SELECT CONVERT(CHAR(8), GETDATE(), 108) AS [hh:mm:ss])
			SET @FECHA_MOV = GETDATE();
			SET @USUARIO = SUSER_NAME();
			SET @APLICACION = APP_NAME();
			SET @SERVIDOR = @@SERVERNAME;

			IF (@REG_TIPO = 'E')
			BEGIN
				SET @OPERACION = 'UPDATE-ACTUALIZADO';
				INSERT INTO BITACORAS.DBO.BITACORAS_ENTRADAS VALUES
				(@OPERACION, @REG_ID, @REG_HORA, @REG_FECHA, @ALU_ID, @HORA_MOV, @HORA_MOV, @USUARIO, @APLICACION, @SERVIDOR);
			END

			IF (@REG_TIPO = 'S')
			BEGIN
				SET @OPERACION = 'UPDATE-ACTUALIZADO';
				INSERT INTO BITACORAS.DBO.BITACORAS_SALIDAS VALUES
				(@OPERACION, @REG_ID, @ALU_ID, @HORA_MOV, @HORA_MOV, @USUARIO, @APLICACION, @SERVIDOR);
			END
		
			--MOVER AL SIGUIENTE REGISTRO
			FETCH NEXT FROM @C_REGISTRO INTO @REG_ID, @REG_HORA, @REG_FECHA, @REG_TIPO, @ALU_ID;
		END --FIN WHILE

	--CERRA EL CURSOR
	CLOSE @C_REGISTRO;
	--LIBERAR
	DEALLOCATE @C_REGISTRO;

	--HACER LO MISMO PERO AHORA CON EL REGISTRO ORIGINAL
	SET @C_REGISTRO = CURSOR FOR SELECT REG_ID, REG_HORA, REG_FECHA, REG_TIPO, ALU_ID FROM deleted;

		--ABRIR CURSOR
		OPEN @C_REGISTRO;

		--POSICIONARNOS AL PRIMER REGISTRO
		FETCH FROM @C_REGISTRO INTO @REG_ID, @REG_HORA, @REG_FECHA, @REG_TIPO, @ALU_ID;

		WHILE (@@FETCH_STATUS = 0)
		BEGIN

			SET @HORA_MOV = (SELECT CONVERT(CHAR(8), GETDATE(), 108) AS [hh:mm:ss])
			SET @FECHA_MOV = GETDATE();
			SET @USUARIO = SUSER_NAME();
			SET @APLICACION = APP_NAME();
			SET @SERVIDOR = @@SERVERNAME;

			IF (@REG_TIPO = 'E')
			BEGIN
				SET @OPERACION = 'UPDATE-ORIGINAL';
				INSERT INTO BITACORAS.DBO.BITACORAS_ENTRADAS VALUES
				(@OPERACION, @REG_ID, @REG_HORA, @REG_FECHA, @ALU_ID, @HORA_MOV, @HORA_MOV, @USUARIO, @APLICACION, @SERVIDOR);
			END

			IF (@REG_TIPO = 'S')
			BEGIN
				SET @OPERACION = 'UPDATE-ORIGINAL';
				INSERT INTO BITACORAS.DBO.BITACORAS_SALIDAS VALUES
				(@OPERACION, @REG_ID, @ALU_ID, @HORA_MOV, @HORA_MOV, @USUARIO, @APLICACION, @SERVIDOR);
			END
		
			--MOVER AL SIGUIENTE REGISTRO
			FETCH NEXT FROM @C_REGISTRO INTO @REG_ID, @REG_HORA, @REG_FECHA, @REG_TIPO, @ALU_ID;
		END --FIN WHILE

	END--FIN IF UPDATE

END--FIN TRIGGER

--***********PROBAR TRIGGER*************--

--COMPRONAR CON INSERT
INSERT INTO REGISTRO_ENT_SAL VALUES
('8:00', '2022-01-01 00:00:00.000', 'E', 272),
('10:00', '2022-01-01 00:00:00.000', 'S', 272);

--VERIFICAR QUE SE REGISTRO EN LA BITACORA
SELECT * FROM BITACORAS.DBO.BITACORAS_ENTRADAS;
SELECT * FROM BITACORAS.DBO.BITACORAS_SALIDAS;

--COMPROBAR AHORA CON UN DELETE
DELETE FROM REGISTRO_ENT_SAL WHERE REG_ID IN (53, 55, 57);

--VERIFICAR QUE SE REGISTRO EN LA BITACORA
SELECT * FROM BITACORAS.DBO.BITACORAS_ENTRADAS;
SELECT * FROM BITACORAS.DBO.BITACORAS_SALIDAS;

--COMPROBAR AHORA CON UN UPDATE
UPDATE REGISTRO_ENT_SAL
SET REG_TIPO = 'S'
WHERE REG_ID IN (1, 3, 5, 13, 15);

--VERIFICAR QUE SE REGISTRO EN LA BITACORA
SELECT * FROM BITACORAS.DBO.BITACORAS_ENTRADAS;
SELECT * FROM BITACORAS.DBO.BITACORAS_SALIDAS;